var client,registeredListeners=registeredListeners||[];$(function(){"use strict";function e(){client.devicesManager.speakers.subscribe(),client.devicesManager.microphones.subscribe(),client.devicesManager.cameras.subscribe(),client.devicesManager.speakers.added(function(e){console.log("Added speaker: "+e().value.id()),$("#spks").append($("<option/>",{value:e().value.id(),text:e().value.id()}))}),client.devicesManager.speakers.removed(function(e){console.log("Removed speaker: "+e.id()),$('#spks option[value="'+e.id()+'"]')[0].remove()}),client.devicesManager.microphones.added(function(e){console.log("Added mic: "+e.id()),$("#mics").append($("<option/>",{value:e.id(),text:e.id()}))}),client.devicesManager.microphones.removed(function(e){console.log("Removed mic: "+e.id()),$('#mics option[value="'+e.id()+'"]')[0].remove()}),client.devicesManager.cameras.added(function(e){console.log("Added camera: "+e.name()),$("#cams").append($("<option/>",{value:e.name(),text:e.name()}))}),client.devicesManager.cameras.removed(function(e){console.log("Removed camera: "+e.name()),$('#cams option[value="'+e.name()+'"]')[0].remove()}),client.devicesManager.selectedSpeaker.changed(function(e){console.log("Selected speaker: "+(e?e.value.id():"None"))}),client.devicesManager.selectedMicrophone.changed(function(e){console.log("Selected microphone: "+(e?e.id():"None"))}),client.devicesManager.selectedCamera.changed(function(e){console.log("Selected video: "+(e?e.name():"None"))})}function n(){client.conversationsManager.conversations.get().then(function(e){e&&e.length>0&&($("#status").text("Disconnecting existing conversations: "+e.length),e.forEach(function(e,n,i){console.log("Closing conversation: "+n),client.conversationsManager.conversations.remove(e)}))})}function i(){var e=client.conversationsManager.conversations.added(function(e){function n(){var n=e.participants(0).person.displayName();"Notified"==r.video.state()?confirm("Accept a video call from "+n+"?")?(console.log("accepting a video call"),s=a.accept(),monitor("Accepting video request from "+n,s)):confirm("Accept a video call from "+n+" with audio only?\n(You will still see the incoming video)")?(console.log("accepting a video call with audio"),c=t.accept(),monitor("Accepting audio request from "+n,c)):(console.log("declining the incoming video request"),a.reject()):"Notified"==r.audio.state()&&(confirm("Accept an audio call from "+n+"?")?(console.log("accepting the audio call"),c=t.accept(),monitor("Accepting audio call from "+n,c)):(console.log("declining the incoming audio request"),t.reject())),l=null}var i,o,t,c,a,s,r,d,l;r=e.selfParticipant,i=e.chatService,t=e.audioService,a=e.videoService,i.accept.enabled()&&(d=e.participants(0).person.displayName(),confirm("Accept incoming chat request from "+d+"?")?(console.log("accepting the incoming chat request"),o=i.accept(),monitor("Accepting chat request from "+d,o)):(console.log("declining the incoming chat request"),i.reject())),e.participants.added(function(e){e.video.state.changed(function(n,i,o){"Connected"==n&&e.video.channels(0).stream.source.sink.container(document.getElementById("renderWindow"))}),e.audio.state.changed(function(e,n,i){})}),r.audio.state.changed(function(e,i,o){console.log("audio new state:"+e),"Notified"!=e||l||(l=setTimeout(n,0))}),r.video.state.changed(function(i,o,t){var c;console.log("video new state:"+i),"Notified"!=i||l?"Connected"==i&&(c=e.selfParticipant.video.channels(0),c.stream.source.sink.container.set(document.getElementById("previewWindow"))):l=setTimeout(n,0)}),e.state.changed(function g(n){console.log("conversations new state:"+n),"Disconnected"==n&&(e.state.changed.off(g),client.conversationsManager.conversations.remove(e))})});registeredListeners.push(e)}function o(e,n){var i,o,t;return t=client.personsAndGroupsManager.createPersonSearchQuery(),t.text(n),t.getMore().then(function(n){i=n[0].result,o=e.createParticipant(i),e.participants.add(o),e.chatService.sendMessage("Hi, meeting now!")})}registeredListeners.forEach(function(e){e.dispose()}),registeredListeners=[],Skype.initialize({apiKey:config.apiKey},function(o){client=new o.application,client.signInManager.state.changed(function(e){console.log(e)}),client.signInManager.signIn({client_id:config.client_id,origins:["https://webdir.online.lync.com/autodiscover/autodiscoverservice.svc/root"],cors:!0,redirect_uri:config.redirect_uri,version:config.version}).then(function(){e(),n(),i()})},function(e){console.log(e),alert("Cannot load the SDK.")}),$(".contactAdd").click(function(){$(".add-p-container").toggleClass("hide")}),$("#btn-add-participant").click(function(){var e,n=client.conversationsManager.conversations(0),i=$("#txt-contact").val();n&&(e=o(n,i)),$(".av-controls").show(),$(".add-p-container").hide()}),$("#joinExistingVideoMeeting").click(function(){var e,n,i=$("#meetingUri").val();e=client.conversationsManager.getConversationByUri(i),n=e.videoService.start()}),$("#startNewVideoMeeting").click(function(){var e,n,i;e=client.conversationsManager.createConversation(),$("#meetingUri").val(""),n=e.videoService.start().then(function(){i=e.uri(),$("#meetingUri").val(i),$(".c-add-p-container").removeClass("hide")})})});